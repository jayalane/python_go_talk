GoLang is Easy and Fun like Python
But use channels and not mutexes


Chris Lane
Something, PayPal
chlane@paypal.com
@lanstin


* Go For Quick and Dirty Software

- syslog proxy - Filtering strings

- syslog proxy - JSON recursive editing

- Example 2 - metrics gatherer

* Syslog Proxy - JSON filering

- List editing

.code -numbers -edit filter.py

* Syslog Proxy - Filtering

.code -numbers -edit filter.go

* Syslog Proxy - Filtering

.code -numbers -edit filter2.go


* Syslog Proxy - JSON helper (note the maybe sleep)

.code -numbers -edit json.py


* Syslog Proxy - JSON helper

.code -numbers -edit json.go

* Syslog Proxy - JSON helper

.code -numbers -edit json2.go

Wrapper for API - no default params

* Results

In 7 months, Only 12 dropped TCP connections (due to memory leak)

2073 LOC GoLang (2588 LOC Python)

Uses all 16 cores, >50% CPU each, evenly

“Total bytes write                               61749087446390” (that’s 61 Tbytes) from 1 process - no restarts

Only performance weirdness is Kafka (C) lib; each time there's a network glitch CPU jumps never to recover.

But, Go runs with no observable problems @ 100% total CPU.

* Python Infrastructure to get 1/2 of Go runtime (Gevent (IO/event loop), connection pools

[[https://github.com/PayPal/support]]  - 30KLOC code, 8KLOC test

* From Mutexes to Channels

- Instance one - connection pools for outbound connections

- Instance two - managing websocket protocol (where in a msg read can force a close and reconnect write)

* Connection Pool Bad 1 - Variables

.code -numbers -edit conn_pool_1.go

* Connection Pool Bad 2 - Locking per conn map

.code -numbers -edit conn_pool_2.go

* Connection Pool Bad 3 - Round Robin, Might not return a conn

.code -numbers -edit conn_pool_3.go

* Connection Pool Bad 4 - Put Conn - Locking

.code -numbers -edit conn_pool_4.go

* Connection Pool Bad 5 - Send Msg - Drops

.code -numbers -edit conn_pool_5.go

* Connection Pool as Goroutine

.code -numbers -edit conn_pool_6.go

* Connection Pool as Goroutine

.code -numbers -edit conn_pool_7.go

